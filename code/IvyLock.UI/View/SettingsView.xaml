<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ViewModel="clr-namespace:IvyLock.ViewModel"
        xmlns:control="clr-namespace:IvyLock.View.Control"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:local="clr-namespace:IvyLock.View"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        x:Class="IvyLock.View.SettingsView"
        mc:Ignorable="d" control:IvyWindow.Icon="&#xE8B8;"
        Title="Settings" Height="512" MinWidth="600" MaxWidth="960" Width="768"
        Background="{DynamicResource BackgroundDark}" Style="{DynamicResource IvyWindow}">
    <Window.Resources>
        <local:PathToIconConverter x:Key="PathToIconConverter"/>
        <CollectionViewSource x:Key="SettingsSource"
                              Source="{Binding SettingGroup.Settings, BindsDirectlyToSource=True, Mode=OneWay}"
                              IsLiveGroupingRequested="True">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <Window.DataContext>
        <ViewModel:SettingsViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="240" MaxWidth="360" />
            <ColumnDefinition MinWidth="300" Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox
            Background="{DynamicResource BackgroundLight}" BorderBrush="{x:Null}"
            SelectedValue="{Binding SettingGroup, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.RowSpan="2"
            HorizontalContentAlignment="Stretch" Padding="0" Margin="0">
            <ListBox.ItemsSource>
                <Binding Path="Settings" />
            </ListBox.ItemsSource>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <control:RippleEffectDecorator
                                    x:Name="border" Height="40" Cursor="Hand">
                                    <Grid Margin="14,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="image" Margin="2" 
                                               Source="{Binding Path, Converter={StaticResource PathToIconConverter}}" Height="20" />
                                        <TextBlock x:Name="text" Grid.Column="1" Text="{Binding Name}"
                                            Foreground="{DynamicResource Foreground}" VerticalAlignment="Center" Margin="10,0" />
                                    </Grid>
                                    <control:RippleEffectDecorator.Background>
                                        <SolidColorBrush Color="{StaticResource Accent}" Opacity="0" />
                                    </control:RippleEffectDecorator.Background>
                                    <control:RippleEffectDecorator.HighlightBackground>
                                        <SolidColorBrush Color="{StaticResource Accent}" Opacity="0.5" />
                                    </control:RippleEffectDecorator.HighlightBackground>
                                </control:RippleEffectDecorator>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Control}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
                                                            Storyboard.TargetName="border">
                                                    <DoubleAnimation To="1" Duration="0:0:0.5" BeginTime="0:0:0.125">
                                                        <DoubleAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)"
                                                            Storyboard.TargetName="border">
                                                    <DoubleAnimation To="0" Duration="0:0:0.5" BeginTime="0:0:0.125">
                                                        <DoubleAnimation.EasingFunction>
                                                            <BackEase EasingMode="EaseOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <SolidColorBrush Color="{StaticResource Accent}" Opacity="0" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Name}" Value="IvyLock">
                                        <Setter TargetName="image" Property="Height" Value="40" />
                                        <Setter TargetName="image" Property="Source" Value="{DynamicResource Logo}" />
                                        <Setter TargetName="text" Property="FontSize" Value="20" />
                                        <Setter TargetName="text" Property="FontFamily" Value="{DynamicResource Header}" />
                                        <Setter TargetName="border" Property="Height" Value="60" />
                                        <Setter TargetName="border" Property="Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="pack://application:,,,/Content/ivy.png" 
                                                            Stretch="UniformToFill" Opacity="1"/>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <ListView
            Grid.Column="1" Background="{DynamicResource BackgroundDark}" BorderBrush="{x:Null}"
            HorizontalContentAlignment="Stretch"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            Padding="0" Margin="0">
            <ListView.Resources>
                <DataTemplate x:Key="Password">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <PasswordBox
                            x:Name="pwdBox"
                            control:Helper.Placeholder="press enter to save"
                            control:Helper.UpdateOnEnter="True"
                            control:PasswordHelper.EncryptedPassword="{Binding Value, Mode=OneWayToSource, UpdateSourceTrigger=Explicit}"
                            control:PasswordHelper.Watch="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PropertyChanged" SourceObject="{Binding Mode=OneWay}">
                                    <ei:ControlStoryboardAction>
                                        <ei:ControlStoryboardAction.Storyboard>
                                            <Storyboard Storyboard.TargetName="pwdBox"
                                                        Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)">
                                                <StaticResourceExtension ResourceKey="InfoAnimation" />
                                            </Storyboard>
                                        </ei:ControlStoryboardAction.Storyboard>
                                    </ei:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </PasswordBox>

                        <Ellipse Width="5" Height="5" Margin="0,0,5,0" x:Name="saveIndicator"
                                 VerticalAlignment="Center" HorizontalAlignment="Right"
                                 Fill="{StaticResource AccentBrush}" Opacity="0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PropertyChanged" SourceObject="{Binding Mode=OneWay}">
                                    <ei:ControlStoryboardAction>
                                        <ei:ControlStoryboardAction.Storyboard>
                                            <Storyboard Storyboard.TargetName="saveIndicator"
                                                        Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation From="1" To="0"
                                                                 Duration="0:0:0.5">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </ei:ControlStoryboardAction.Storyboard>
                                    </ei:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Ellipse>
                    </Grid>
                </DataTemplate>
                <DataTemplate x:Key="Enum">
                    <ComboBox ItemsSource="{Binding Options}" SelectedValue="{Binding Value}"
                                  IsTextSearchEnabled="False"
                                  Template="{DynamicResource ComboBoxControlTemplate}"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                </DataTemplate>
                <DataTemplate x:Key="Action">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Command="{Binding Value}" Width="100" x:Name="btn">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock><Run Text="Run" /></TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value.Execution.IsRunning}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="#e1af33"><Run Text="Working..." /></TextBlock>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Value.Execution.IsSuccessfullyCompleted}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="#1e90ff"><Run Text="Done" /></TextBlock>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Value.Execution.IsFaulted}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="#ff0000"><Run Text="Failed" /></TextBlock>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </DataTemplate>
                <DataTemplate x:Key="Number">
                    <control:NumericUpDown
                            Value="{Binding Value}"
                            MinValue="{Binding MinValue}"
                            MaxValue="{Binding MaxValue}"
                            Grid.Column="1"
                            VerticalAlignment="Center" />
                </DataTemplate>
                <DataTemplate x:Key="String">
                    <TextBox
                        control:Helper.Placeholder="hit enter to change"
                        control:Helper.UpdateOnEnter="True"
                        Text="{Binding Value, UpdateSourceTrigger=Explicit}"
                        Grid.Column="1"
                        VerticalAlignment="Center" />
                </DataTemplate>
                <DataTemplate x:Key="Boolean">
                    <CheckBox
                        IsChecked="{Binding Value}"
                        VerticalAlignment="Center" />
                </DataTemplate>
            </ListView.Resources>
            <ListView.ItemsSource>
                <Binding Source="{StaticResource SettingsSource}" />
            </ListView.ItemsSource>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="GroupItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <Border Padding="14,16">
                                                <TextBlock Text="{Binding Name}" Style="{StaticResource Subheader}" />
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsPresenter"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="border" Background="Transparent" Height="72" 
                                        Padding="14,0" Margin="0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="200" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Name}"
                                                       Foreground="{DynamicResource Foreground}"/>
                                            <TextBlock x:Name="desc" Text="{Binding Description}" 
                                                       Foreground="{DynamicResource ForegroundSecondary}"
                                                       FontSize="9pt" TextTrimming="CharacterEllipsis" />
                                        </StackPanel>
                                        <ContentPresenter x:Name="content" Margin="10,0,0,0" Grid.Column="1" 
                                                          Grid.RowSpan="2" HorizontalAlignment="Right" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Control}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Description}" Value="{x:Null}">
                                        <Setter TargetName="desc" Property="Visibility" Value="Collapsed" />
                                        <Setter TargetName="border" Property="Height" Value="48" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplateSelector>
                <control:SettingTemplateSelector />
            </ListView.ItemTemplateSelector>
        </ListView>

        <Grid x:Name="overlay" Background="{DynamicResource BackgroundDark}" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
                <RowDefinition />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Visible" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentScreen, Mode=OneWay}" Value="Main">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.05" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Viewbox Margin="0" Grid.Column="1"
                   SnapsToDevicePixels="True" Grid.RowSpan="1" HorizontalAlignment="Center">
                <Image Source="{DynamicResource Logo}" />
            </Viewbox>

            <Border Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Center" Padding="5"
                    x:Name="pwdBorder">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentScreen, Mode=OneWay}" Value="Loading">
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.05" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.05"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                                <Setter Property="Opacity" Value="0" />
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PasswordVerified" SourceObject="{Binding Mode=OneWay}"
                                    SourceName="pwdBorder">
                        <ei:ControlStoryboardAction>
                            <ei:ControlStoryboardAction.Storyboard>
                                <Storyboard Storyboard.TargetName="pwdBox"
                                            Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)">
                                    <StaticResource ResourceKey="SuccessAnimation" />
                                </Storyboard>
                            </ei:ControlStoryboardAction.Storyboard>
                        </ei:ControlStoryboardAction>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PasswordDelayed" SourceObject="{Binding Mode=OneWay}"
                                    SourceName="pwdBorder">
                        <ei:ControlStoryboardAction>
                            <ei:ControlStoryboardAction.Storyboard>
                                <Storyboard Storyboard.TargetName="pwdBox"
                                            Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)">
                                    <StaticResource ResourceKey="WarnAnimation" />
                                </Storyboard>
                            </ei:ControlStoryboardAction.Storyboard>
                        </ei:ControlStoryboardAction>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PasswordRejected" SourceObject="{Binding Mode=OneWay}"
                                    SourceName="pwdBorder">
                        <ei:ControlStoryboardAction>
                            <ei:ControlStoryboardAction.Storyboard>
                                <Storyboard Storyboard.TargetName="pwdBox"
                                            Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)">
                                    <StaticResource ResourceKey="FailAnimation" />
                                </Storyboard>
                            </ei:ControlStoryboardAction.Storyboard>
                        </ei:ControlStoryboardAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <PasswordBox
                    x:Name="pwdBox"
                    control:Helper.UpdateOnEnter="True"
                    control:PasswordHelper.EncryptedPassword="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                    control:PasswordHelper.Watch="True"
                    Height="32" Margin="20,0">
                    <PasswordBox.Style>
                        <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentScreen}" Value="SetupPassword">
                                    <Setter Property="control:Helper.Placeholder" Value="choose your password and hit enter" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentScreen}" Value="EnterPassword">
                                    <Setter Property="control:Helper.Placeholder" Value="enter your password and hit enter" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </PasswordBox.Style>
                </PasswordBox>
            </Border>

            <Border Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Center" Padding="5">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentScreen, Mode=OneWay}" Value="Loading">
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.05" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.05"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal"
                       Grid.Row="2" Grid.ColumnSpan="3" Opacity="0.56">
                    <TextBlock Text="Loading" />
                    <ProgressBar HorizontalAlignment="Left" Height="1" Width="60" Margin="8,0,0,0"
                             IsIndeterminate="True" BorderThickness="1" Background="Transparent"/>
                </StackPanel>

            </Border>

            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal"
                       Grid.Row="2" Grid.ColumnSpan="3">
                <TextBlock Text="{Binding PasswordErrorMessage}" Opacity="0.56" />
                <ProgressBar HorizontalAlignment="Left" Height="2" Width="60" Margin="8,0,0,0"
                             x:Name="attemptTimer" BorderThickness="1" Background="Transparent">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PasswordRejected" SourceObject="{Binding Mode=OneWay}">
                            <ei:ControlStoryboardAction>
                                <ei:ControlStoryboardAction.Storyboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Value"
                                                         Storyboard.TargetName="attemptTimer"
                                                         From="100"
                                                         To="0"
                                                         Duration="{Binding AttemptWait}"/>
                                    </Storyboard>
                                </ei:ControlStoryboardAction.Storyboard>
                            </ei:ControlStoryboardAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PasswordVerificationStatus}"
                                             Value="{x:Static ViewModel:PasswordVerificationStatus.Delayed}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
            </StackPanel>
        </Grid>

    </Grid>
</Window>
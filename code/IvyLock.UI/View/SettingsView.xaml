<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:ViewModel="clr-namespace:IvyLock.ViewModel"
        xmlns:control="clr-namespace:IvyLock.View.Control"
        x:Class="IvyLock.View.SettingsView"
        mc:Ignorable="d"
        Title="Settings" Height="512" MinWidth="600" MaxWidth="800" Width="700"
        Background="{DynamicResource BackgroundDark}"
        Icon="{DynamicResource Icon}" Style="{DynamicResource IvyWindow}">
    <Window.DataContext>
        <ViewModel:SettingsViewModel />
    </Window.DataContext>
    <Window.Resources>
        <CollectionViewSource x:Key="Source"
                              Source="{Binding SettingGroup.Settings, BindsDirectlyToSource=True, Mode=OneWay}"
                              IsLiveGroupingRequested="True">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="200" MaxWidth="300" />
            <ColumnDefinition MinWidth="300" Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ListBox
            Background="{DynamicResource BackgroundLight}" BorderBrush="{x:Null}"
            ItemsSource="{Binding Settings}" SelectedValue="{Binding SettingGroup, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.RowSpan="2"
            HorizontalContentAlignment="Stretch" Padding="0" Margin="0">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="border" Padding="4" Margin="0" Background="Transparent">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="image" Margin="2" Source="{Binding Icon}" Height="24" />
                                        <TextBlock x:Name="text" Grid.Column="1" Text="{Binding Name}"
                                            Foreground="{DynamicResource Foreground}" VerticalAlignment="Center" Margin="5,0" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Control}" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Highlight}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Name}" Value="IvyLock">
                                        <Setter TargetName="image" Property="Height" Value="48" />
                                        <Setter TargetName="image" Property="Source" Value="{DynamicResource Logo}" />
                                        <Setter TargetName="text" Property="FontSize" Value="16" />
                                        <Setter TargetName="text" Property="FontFamily" Value="{DynamicResource Header}" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <ListView
            Grid.Column="1" Background="{DynamicResource BackgroundDark}" BorderBrush="{x:Null}"
            ItemsSource="{Binding Source={StaticResource Source}}" HorizontalContentAlignment="Stretch"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            Padding="0" Margin="0">
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Border Padding="4,10,4,4">
                                <TextBlock FontSize="20" Text="{Binding Name}" Margin="9,0" FontWeight="Bold"
                                       Foreground="{DynamicResource Foreground}" FontFamily="{DynamicResource Header}" />
                            </Border>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="border" Padding="4" Background="Transparent" Height="32">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="200"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Binding Name}"
                                            Foreground="{DynamicResource Foreground}"
                                            VerticalAlignment="Center" Margin="5,0" />
                                        <TextBlock x:Name="desc" Text="{Binding Description}" FontSize="10" Grid.Row="1"
                                            Foreground="{DynamicResource ForegroundSecondary}"
                                            VerticalAlignment="Center" Margin="5,0" TextTrimming="CharacterEllipsis" />
                                        <ContentPresenter x:Name="content" Margin="10,0,0,0" Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Right" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource Control}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding Description}" Value="{x:Null}">
                                        <Setter TargetName="desc" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Resources>
                <DataTemplate x:Key="Password">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <PasswordBox
                                x:Name="pwdBox"
                                control:PasswordBoxHelper.Placeholder="type to change passcode"
                                control:PasswordBoxHelper.EncryptedPassword="{Binding Value, Mode=OneWayToSource}"
                                control:PasswordBoxHelper.Watch="True" Template="{DynamicResource PasswordBoxControlTemplate}">
                        </PasswordBox>
                    </Grid>
                </DataTemplate>
                <DataTemplate x:Key="Enum">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ComboBox ItemsSource="{Binding Options}" SelectedValue="{Binding Value}"
                                  Background="{DynamicResource BackgroundLight}"
                                  IsTextSearchEnabled="False" Style="{DynamicResource {x:Type ComboBox}}" />
                    </Grid>
                </DataTemplate>
                <DataTemplate x:Key="Action">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button Command="{Binding Value}" Width="100" x:Name="btn">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <TextBlock>Run</TextBlock>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Value.Execution.IsRunning}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="#e1af33">Working...</TextBlock>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Value.Execution.IsSuccessfullyCompleted}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="#1e90ff">Done</TextBlock>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Value.Execution.IsFaulted}" Value="True">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <TextBlock Foreground="#ff0000">Failed</TextBlock>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </DataTemplate>
                <DataTemplate x:Key="Number">
                    <control:NumericUpDown
                            Value="{Binding Value}"
                            MinValue="{Binding MinValue}"
                            MaxValue="{Binding MaxValue}"
                            Grid.Column="1"
                            VerticalAlignment="Center" />
                </DataTemplate>
                <DataTemplate x:Key="String">
                    <xctk:WatermarkTextBox
                            Watermark="hit enter to change"
                            Text="{Binding Value}"
                            Grid.Column="1"
                            VerticalAlignment="Center" />
                </DataTemplate>
                <DataTemplate x:Key="Boolean">
                    <CheckBox
                        IsChecked="{Binding Value}"
                        VerticalAlignment="Center" />
                </DataTemplate>
            </ListView.Resources>
            <ListView.ItemTemplateSelector>
                <control:SettingTemplateSelector />
            </ListView.ItemTemplateSelector>
        </ListView>
        <Border x:Name="toast" Background="{DynamicResource BackgroundLight}" Opacity="0.5" Grid.Row="2" Grid.Column="2" Padding="5">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">all settings are autosaved</TextBlock>
        </Border>

        <Grid x:Name="overlay" Background="{DynamicResource BackgroundDark}" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
                <RowDefinition Height="2*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Viewbox Margin="0" Grid.Column="1"
                   SnapsToDevicePixels="True" Grid.RowSpan="1" HorizontalAlignment="Center">
                <Image Source="{DynamicResource Logo}" />
            </Viewbox>

            <Border Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Center" Padding="5" Background="Transparent">
                <PasswordBox
                    x:Name="pwdBox"
                    control:PasswordBoxHelper.EncryptedPassword="{Binding Password, Mode=TwoWay}"
                    control:PasswordBoxHelper.Watch="True"
                    Height="32" Margin="20,0" Background="{DynamicResource BackgroundHalf}">
                    <PasswordBox.Style>
                        <Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentScreen}" Value="SetupPassword">
                                    <Setter Property="control:PasswordBoxHelper.Placeholder" Value="choose your password" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentScreen}" Value="EnterPassword">
                                    <Setter Property="control:PasswordBoxHelper.Placeholder" Value="enter your password" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Locked}" Value="False">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </PasswordBox.Style>
                </PasswordBox>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Locked}" Value="False" />
                                    <Condition Binding="{Binding CurrentScreen}" Value="Main" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                            To="#9F89FF89"
                                                            Duration="0:0:0.15" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                                            To="Transparent"
                                                            Duration="0:0:0.15" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>

            <Button Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="10" Grid.Column="1"
                    Command="{Binding AdvanceScreenCommand}">
                set password
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentScreen}" Value="EnterPassword">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding CurrentScreen}" Value="Main">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentScreen, Mode=OneWay}" Value="SetupPassword">
                            <Setter Property="Visibility" Value="Visible" />
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0" BeginTime="0:0:0.25" Duration="0:0:0.25" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.50"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentScreen, Mode=OneWay}" Value="EnterPassword">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.25" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="0" BeginTime="0:0:0.25" Duration="0:0:0.25" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.50"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</Window>
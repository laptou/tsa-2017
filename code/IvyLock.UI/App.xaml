<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:IvyLock.UI"
    xmlns:view="clr-namespace:IvyLock.UI.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="IvyLock.UI.App" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    StartupUri="View/SettingsView.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="BackgroundDark" Color="#000000" />
        <SolidColorBrush x:Key="BackgroundLight" Color="#1A1A1A" />
        <SolidColorBrush x:Key="Foreground" Color="#FFFFFF" />
        <SolidColorBrush x:Key="ForegroundSecondary" Color="#ECECEC" />
        <SolidColorBrush x:Key="Control" Color="#292929" />
        <SolidColorBrush x:Key="Highlight" Color="#383838" />
        <Style TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="FontFamily" Value="Roboto" />
        </Style>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="MinWidth" Value="192" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style TargetType="{x:Type xctk:WatermarkPasswordBox}">
            <Setter Property="MinWidth" Value="192" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style TargetType="{x:Type xctk:WatermarkTextBox}">
            <Setter Property="MinWidth" Value="192" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style TargetType="{x:Type xctk:IntegerUpDown}">
            <Setter Property="MinWidth" Value="192" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource Control}" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" BorderBrush="{DynamicResource ForegroundSecondary}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark" Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                              Fill="{DynamicResource Foreground}" Margin="1" Opacity="0" Stretch="None" />
                        <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource Foreground}" Margin="2" Opacity="0" />
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Foreground}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Control}" />
                    <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource Control}" />
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource Control}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{DynamicResource Foreground}" />
                    <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource ForegroundSecondary}" />
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource ForegroundSecondary}" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template" Value="{StaticResource CheckBoxTemplate}" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="MinWidth" Value="256" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Background" Value="{DynamicResource Control}" />
            <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
    </Application.Resources>
</Application>